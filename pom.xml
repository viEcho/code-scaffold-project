<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
    <!-- 基于2.4.5 版本boot-start 构建-->
    <parent>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-parent</artifactId>
        <version>2.4.5</version>
        <relativePath/>
    </parent>

    <groupId>com.code.scaffold</groupId>
    <artifactId>code-scaffold-project</artifactId>
    <version>0.0.1-SNAPSHOT</version>
    <name>code-scaffold-project</name>
    <description>one project that contain kinds of sample</description>

    <modelVersion>4.0.0</modelVersion>
    <packaging>pom</packaging>

    <!-- 子工程 -->
    <modules>
        <module>redis-server-sample</module>
        <module>kafka-server-sample</module>
        <module>base-common</module>
        <module>seata-server-sample</module>
        <module>dynamicdb-server-sample</module>
        <module>es-server-sample</module>
        <module>tess4j-server-sample</module>
    </modules>

    <!-- 全局依赖版本管理 -->
    <properties>
        <!--基于jdk1.8-->
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <maven.compiler.encoding>UTF-8</maven.compiler.encoding>
        <java.version>1.8</java.version>
        <maven.compiler.source>1.8</maven.compiler.source>
        <maven.compiler.target>1.8</maven.compiler.target>

        <!--子模块jar版本-->
        <kafka.client.version>2.2.0</kafka.client.version>
        <redisson.starter.version>3.13.1</redisson.starter.version>
        <es.version>3.0.5</es.version>
        <es.client.version>7.9.3</es.client.version>
    </properties>

    <!--管理各子模块 各自引入的 中间件jar版本-->
    <dependencyManagement>
        <dependencies>
            <!--由于redisson 可作分布式锁，此处引入redisson 作为数据缓存-->
            <dependency>
                <groupId>org.redisson</groupId>
                <artifactId>redisson-spring-boot-starter</artifactId>
                <version>${redisson.starter.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.kafka</groupId>
                <artifactId>kafka-clients</artifactId>
                <version>${kafka.client.version}</version>
            </dependency>
            <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-starter-data-elasticsearch</artifactId>
                <version>${es.version}</version>
            </dependency>
            <dependency>
                <groupId>org.elasticsearch.client</groupId>
                <artifactId>elasticsearch-rest-high-level-client</artifactId>
                <version>${es.client.version}</version>
            </dependency>
        </dependencies>
    </dependencyManagement>

    <!--基础依赖都放到base目录下管理-->
    <dependencies>
        <dependency>
            <groupId>com.code.scaffold</groupId>
            <artifactId>base-common</artifactId>
            <version>${project.version}</version>
        </dependency>
    </dependencies>

    <build>
        <plugins>
            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
                <version>3.2.2</version>
                <configuration>
                    <excludes>
                        <exclude>
                            <groupId>org.projectlombok</groupId>
                            <artifactId>lombok</artifactId>
                        </exclude>
                    </excludes>
                </configuration>
            </plugin>
            <!--jdk编译插件-->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>3.8.0</version>
                <configuration>
                    <source>1.8</source>
                    <target>1.8</target>
                    <encoding>utf-8</encoding>
                </configuration>
            </plugin>
        </plugins>
        <resources>
            <resource>
                <directory>src/main/java</directory>
                <includes>
                    <include>**/*.yml</include>
                    <include>**/*.properties</include>
                    <include>**/*.xml</include>
                </includes>
                <filtering>false</filtering>
            </resource>
            <resource>
                <directory>src/main/resources</directory>
                <includes>
                    <include>**/*.*</include>
                </includes>
                <filtering>false</filtering>
            </resource>
        </resources>
    </build>
</project>
